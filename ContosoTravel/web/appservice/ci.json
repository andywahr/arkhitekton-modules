{
    "options": [
        {
            "enabled": true,
            "inputs": {}
        }
    ],
    "triggers": [
        {
            "branchFilters": [
                "+master"
            ],
            "pathFilters": [
                "+/"
            ],
            "batchChanges": true,
            "maxConcurrentBuildsPerBranch": 1,
            "triggerType": 2
        }
    ],
    "variables": {
        "system.debug": {
            "value": "false",
            "allowOverride": true
        },
        "BuildConfiguration": {
            "value": "release",
            "allowOverride": true
        },
        "BuildPlatform": {
            "value": "any cpu",
            "allowOverride": true
        }
    },
    "properties": {},
    "tags": [],
    "buildNumberFormat": "$(date:yyyyMMdd)$(rev:.r)",
    "jobAuthorizationScope": 1,
    "process": {
        "phases": [
            {
                "steps": [
                    {
                        "environment": {},
                        "enabled": true,
                        "continueOnError": false,
                        "alwaysRun": false,
                        "displayName": "Use .NET Core Tool Installer",
                        "timeoutInMinutes": 0,
                        "task": {
                            "id": "b0ce7256-7898-45d3-9cb5-176b752bfea6",
                            "versionSpec": "0.*",
                            "definitionType": "task"
                        },
                        "inputs": {
                            "packageType": "sdk",
                            "version": "2.1.105"
                        }
                    },
                    {
                        "environment": {},
                        "enabled": true,
                        "continueOnError": false,
                        "alwaysRun": false,
                        "displayName": "Restore",
                        "timeoutInMinutes": 0,
                        "task": {
                            "id": "5541a522-603c-47ad-91fc-a4b1d163081b",
                            "versionSpec": "2.*",
                            "definitionType": "task"
                        },
                        "inputs": {
                            "command": "restore",
                            "projects": "$(Parameters.RestoreBuildProjects)"
                        }
                    },
                    {
                        "environment": {},
                        "enabled": true,
                        "continueOnError": false,
                        "alwaysRun": false,
                        "displayName": "Build",
                        "timeoutInMinutes": 0,
                        "task": {
                            "id": "5541a522-603c-47ad-91fc-a4b1d163081b",
                            "versionSpec": "2.*",
                            "definitionType": "task"
                        },
                        "inputs": {
                            "command": "build",
                            "projects": "$(Parameters.RestoreBuildProjects)",
                            "arguments": "--configuration $(BuildConfiguration)"
                        }
                    },
                    {
                        "environment": {},
                        "enabled": true,
                        "continueOnError": false,
                        "alwaysRun": false,
                        "displayName": "Test",
                        "timeoutInMinutes": 0,
                        "task": {
                            "id": "5541a522-603c-47ad-91fc-a4b1d163081b",
                            "versionSpec": "2.*",
                            "definitionType": "task"
                        },
                        "inputs": {
                            "command": "test",
                            "projects": "$(Parameters.TestProjects)",
                            "arguments": "--configuration $(BuildConfiguration)"
                        }
                    },
                    {
                        "environment": {},
                        "enabled": true,
                        "continueOnError": false,
                        "alwaysRun": false,
                        "displayName": "Publish",
                        "timeoutInMinutes": 0,
                        "task": {
                            "id": "5541a522-603c-47ad-91fc-a4b1d163081b",
                            "versionSpec": "2.*",
                            "definitionType": "task"
                        },
                        "inputs": {
                            "command": "publish",
                            "publishWebProjects": "True",
                            "zipAfterPublish": "true",
                            "arguments": "--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)"
                        }
                    },
                    {
                        "environment": {},
                        "enabled": true,
                        "continueOnError": false,
                        "alwaysRun": false,
                        "displayName": "Publish Artifact",
                        "timeoutInMinutes": 0,
                        "task": {
                            "id": "2ff763a7-ce83-4e1f-bc89-0ae63477cebe",
                            "versionSpec": "1.*",
                            "definitionType": "task"
                        },
                        "inputs": {
                            "PathtoPublish": "$(build.artifactstagingdirectory)",
                            "ArtifactName": "drop",
                            "ArtifactType": "Container",
                            "TargetPath": "\\\\my\\share\\$(Build.DefinitionName)\\$(Build.BuildNumber)"
                        }
                    }
                ],
                "name": null,
                "refName": "Phase_1",
                "target": {
                    "executionOptions": null,
                    "allowScriptsAuthAccessOption": false,
                    "type": 1
                },
                "jobAuthorizationScope": 0
            }
        ],
        "type": 1
    },
    "repository":  {
        "properties": {
            "cleanOptions": "0",
            "labelSources": "0",
            "labelSourcesFormat": "$(build.buildNumber)",
            "reportBuildStatus": "true",
            "gitLfsSupport": "false",
            "skipSyncSource": "false",
            "checkoutNestedSubmodules": "false",
            "fetchDepth": "0"
        },
        "id": "GITREPORTID",
        "type": "TfsGit",
        "name": "GITREPORTNAME",
        "url": "GITREPOURL",
        "defaultBranch": "refs/heads/master",
        "clean": "false",
        "checkoutSubmodules": false
    },
    "processParameters": {
        "inputs": [
            {
                "aliases": [],
                "options": {},
                "properties": {},
                "name": "RestoreBuildProjects",
                "label": "Project(s) to restore and build",
                "defaultValue": "**/*.csproj",
                "type": "multiline",
                "helpMarkDown": "Relative path of the .csproj file(s) from repo root. Wildcards can be used. For example, **/*.csproj for all .csproj files in all the subfolders.",
                "visibleRule": "",
                "groupName": ""
            },
            {
                "aliases": [],
                "options": {},
                "properties": {},
                "name": "TestProjects",
                "label": "Project(s) to test",
                "defaultValue": "**/*Tests/*.csproj",
                "type": "multiline",
                "helpMarkDown": "Relative path of the .csproj file(s) from repo root. Wildcards can be used. For example, **/*.csproj for all .csproj files in all the subfolders.",
                "visibleRule": "",
                "groupName": ""
            }
        ]
    },
    "quality": 1,
    "drafts": [],
    "queue": {
        "id": AGENCYPOOLID
    },
    "name": "PROJECTNAME - CI",
    "type": 2
}